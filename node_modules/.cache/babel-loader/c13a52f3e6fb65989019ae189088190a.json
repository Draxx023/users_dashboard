{"ast":null,"code":"import * as actionType from './types';\nimport * as AuthService from '../components/services/auth.service'; // register action\n\nexport const registerAction = payload => dispatch => {\n  // make sure dispatch is asynchronous\n  // dispatch should be implemented in an action not into the component\n  // use redux-thunk (in store.js) to do that\n  return AuthService.register(payload).then(response => {\n    dispatch({\n      type: actionType.REGISTER_SUCCESS,\n      payload: response.data\n    });\n    return Promise.resolve(response.data);\n  }).catch(error => {\n    dispatch({\n      type: actionType.REGISTER_FAIL,\n      payload: {\n        err: error.message || \"Registration failed.\"\n      }\n    });\n    return Promise.reject(error);\n  });\n}; // login action\n\nexport const loginAction = userCredentials => dispatch => {\n  return AuthService.login(userCredentials).then(data => {\n    dispatch({\n      type: actionType.LOGIN_SUCCESS,\n      payload: data\n    });\n    return Promise.resolve(data);\n  }).catch(error => {\n    dispatch({\n      type: actionType.LOGIN_FAIL,\n      payload: {\n        err: error.message || \"Login failed.\"\n      }\n    });\n    return Promise.reject(error);\n  });\n}; // logout action\n\nexport const logoutAction = () => dispatch => {\n  const msg = AuthService.logout();\n  dispatch({\n    type: actionType.LOGOUT,\n    payload: {\n      msg\n    }\n  });\n};","map":{"version":3,"names":["actionType","AuthService","registerAction","payload","dispatch","register","then","response","type","REGISTER_SUCCESS","data","Promise","resolve","catch","error","REGISTER_FAIL","err","message","reject","loginAction","userCredentials","login","LOGIN_SUCCESS","LOGIN_FAIL","logoutAction","msg","logout","LOGOUT"],"sources":["/Users/ayoub_cm/Desktop/mern_app/src/container/actions.js"],"sourcesContent":["import * as actionType from './types';\nimport * as AuthService from '../components/services/auth.service';\n\n// register action\nexport const registerAction = (payload) => (dispatch) => {\n    // make sure dispatch is asynchronous\n    // dispatch should be implemented in an action not into the component\n    // use redux-thunk (in store.js) to do that\n    return AuthService.register(payload)\n        .then(response => {\n            dispatch({\n                type: actionType.REGISTER_SUCCESS,\n                payload: response.data\n            })\n            return Promise.resolve(response.data);\n        })\n        .catch(error => {\n            dispatch({\n                type: actionType.REGISTER_FAIL,\n                payload: { err: error.message || \"Registration failed.\" }\n            })\n            return Promise.reject(error);\n        })\n}\n\n// login action\n\nexport const loginAction = (userCredentials) => (dispatch) => {\n    return AuthService.login(userCredentials)\n        .then(data => {\n            dispatch({\n                type: actionType.LOGIN_SUCCESS,\n                payload: data\n            })\n            return Promise.resolve(data);\n        })\n        .catch(error => {\n            dispatch({\n                type: actionType.LOGIN_FAIL,\n                payload: { err: error.message || \"Login failed.\" }\n            })\n            return Promise.reject(error)\n        });\n}\n\n// logout action\nexport const logoutAction = () => (dispatch) => {\n    const msg = AuthService.logout();\n    dispatch({\n        type: actionType.LOGOUT,\n        payload: { msg }\n    })\n}"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,SAA5B;AACA,OAAO,KAAKC,WAAZ,MAA6B,qCAA7B,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAcC,QAAD,IAAc;EACrD;EACA;EACA;EACA,OAAOH,WAAW,CAACI,QAAZ,CAAqBF,OAArB,EACFG,IADE,CACGC,QAAQ,IAAI;IACdH,QAAQ,CAAC;MACLI,IAAI,EAAER,UAAU,CAACS,gBADZ;MAELN,OAAO,EAAEI,QAAQ,CAACG;IAFb,CAAD,CAAR;IAIA,OAAOC,OAAO,CAACC,OAAR,CAAgBL,QAAQ,CAACG,IAAzB,CAAP;EACH,CAPE,EAQFG,KARE,CAQIC,KAAK,IAAI;IACZV,QAAQ,CAAC;MACLI,IAAI,EAAER,UAAU,CAACe,aADZ;MAELZ,OAAO,EAAE;QAAEa,GAAG,EAAEF,KAAK,CAACG,OAAN,IAAiB;MAAxB;IAFJ,CAAD,CAAR;IAIA,OAAON,OAAO,CAACO,MAAR,CAAeJ,KAAf,CAAP;EACH,CAdE,CAAP;AAeH,CAnBM,C,CAqBP;;AAEA,OAAO,MAAMK,WAAW,GAAIC,eAAD,IAAsBhB,QAAD,IAAc;EAC1D,OAAOH,WAAW,CAACoB,KAAZ,CAAkBD,eAAlB,EACFd,IADE,CACGI,IAAI,IAAI;IACVN,QAAQ,CAAC;MACLI,IAAI,EAAER,UAAU,CAACsB,aADZ;MAELnB,OAAO,EAAEO;IAFJ,CAAD,CAAR;IAIA,OAAOC,OAAO,CAACC,OAAR,CAAgBF,IAAhB,CAAP;EACH,CAPE,EAQFG,KARE,CAQIC,KAAK,IAAI;IACZV,QAAQ,CAAC;MACLI,IAAI,EAAER,UAAU,CAACuB,UADZ;MAELpB,OAAO,EAAE;QAAEa,GAAG,EAAEF,KAAK,CAACG,OAAN,IAAiB;MAAxB;IAFJ,CAAD,CAAR;IAIA,OAAON,OAAO,CAACO,MAAR,CAAeJ,KAAf,CAAP;EACH,CAdE,CAAP;AAeH,CAhBM,C,CAkBP;;AACA,OAAO,MAAMU,YAAY,GAAG,MAAOpB,QAAD,IAAc;EAC5C,MAAMqB,GAAG,GAAGxB,WAAW,CAACyB,MAAZ,EAAZ;EACAtB,QAAQ,CAAC;IACLI,IAAI,EAAER,UAAU,CAAC2B,MADZ;IAELxB,OAAO,EAAE;MAAEsB;IAAF;EAFJ,CAAD,CAAR;AAIH,CANM"},"metadata":{},"sourceType":"module"}